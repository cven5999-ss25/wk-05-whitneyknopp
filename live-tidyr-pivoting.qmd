---
title: "Live coding exercise - Pivoting"
format:
  html:
    embed-resources: true
editor: visual
editor_options: 
  chunk_output_type: console
execute:
  echo: true
  warning: false
bibliography: references.bib
---

```{r}
library(tidyverse)
library(gapminder)
```

# tidyr: pivoting

## Example: Waste characterisation data

The data for this exercise was generated as part of a course taught at ETH Zurich, Switzerland [@benaleya2022].

The dataset contains the results of a waste characterisation study of public bins in Zurich, Switzerland. Waste was separated and weighed in kg for the following categories:

-   paper
-   PET
-   metals
-   glass
-   others

Additional metadata on location and type of bin is available.

```{r}
# import the data
# the data is not separated by a comma, but a semicolim, use read_delim() or read_csv2
read_csv2(here::here("data/rbtl_fs22_waste_composition_bellevue.csv"))

waste_data <- read_delim(here::here("data/rbtl_fs22_waste_composition_bellevue.csv"), delim = ";")

```

```{r}

waste_data |> 
  select(number, starts_with("weight")) |> 
  rename_with(~str_remove(.x, "weight_")) |> # ~ does over each column with the .x
  select(-total) |> 
  pivot_longer(cols = !number, # excludes the number column
               names_to = "weight_category", # changes column name for previous names
               values_to = "weight") # changes name of value column 
```

## Example: Gapminder

The following exercise is taken from [@zimmerman2019].

```{r}
# read the csv directly from github when they're stored in a repository
gapminder_wide <- read_csv("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/main/episodes/data/gapminder_wide.csv") 

```

```{r}
gapminder_wide

```

### From wide to long

```{r}
gapminder_long <- gapminder_wide |>
  pivot_longer(cols = gdpPercap_1952:pop_2007,
               names_to = "obs_type_year",
               values_to = "obs_value") |> # based on this, we need to separate obs_type_year into 2 separate columns
  separate(col = obs_type_year, into = c("obs_type", "year"), sep = "_")



  

```

**Your turn**

1.  Using `gapminder_long`, calculate the mean life expectancy, population, and gdpPercap for each continent. **Hint:** use the `group_by()` and `summarize()` functions we learned in the `dplyr` lesson.
2.  Assign the created dataframe to an object with the name `gapminder_long_summary`

```{r}
gapminder_long_summary <- gapminder_long |> 
  group_by(continent, obs_type) |> 
  summarize(average = mean(obs_value))

# go from long to wide data
gapminder_long_summary |> 
  pivot_wider(names_from = obs_type,
              values_from = average) |> 
  knitr::kable(digits = 1)

```

### From long to intermediate format

```{r}


```

# References
